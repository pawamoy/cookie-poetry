[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "{{ cookiecutter.python_package_distribution_name }}"
version = "0.1.0"
description = "{{ cookiecutter.project_description }}"
authors = ["{{ cookiecutter.author_fullname }} <{{ cookiecutter.author_email }}>"]
license = "{{ cookiecutter.copyright_license }}"
readme = "README.md"
repository = "https://{{ cookiecutter.repository_provider }}/{{ cookiecutter.repository_namespace }}/{{ cookiecutter.repository_name }}"
homepage = "https://{{ cookiecutter.repository_provider }}/{{ cookiecutter.repository_namespace }}/{{ cookiecutter.repository_name }}"
keywords = []
packages = [ { include = "{{ cookiecutter.python_package_import_name }}", from = "src" } ]
include = [
    "README.md",
    "pyproject.toml"
]

[tool.poetry.dependencies]
python = "^3.6"

[tool.poetry.dev-dependencies]
bandit = "*"
black = { version = "*", allow-prereleases = true }
coverage = "*"
flake8 = "*"
ipython = "*"
isort = { version = "*", extras = ["pyproject"] }
jinja2-cli = "*"
pylint = { git = "https://github.com/PyCQA/pylint" }
pytest = "*"
pytest-cov = "*"
pytest-sugar = "*"
pytest-xdist = "*"
safety = "*"

[tool.poetry.scripts]
{{ cookiecutter.python_package_command_line_name }} = "{{ cookiecutter.python_package_import_name }}.cli:main"

[tool.black]
line-length = 120

[tool.isort]
line_length = 120
not_skip = "__init__.py"
multi_line_output = 3
force_single_line = false
balanced_wrapping = true
default_section = "THIRDPARTY"
known_first_party = "{{ cookiecutter.python_package_import_name }}"
include_trailing_comma = true

[tool.pylint.options]
disable = """
  bad-continuation,
  too-many-lines,
  too-many-public-methods,
  too-many-locals,
  too-many-statements,
  too-many-arguments,
  too-many-instance-attributes,
  too-many-branches,
  too-few-public-methods,
  duplicate-code
"""
max-line-length = "120"
